{"cells":[{"cell_type":"markdown","metadata":{"id":"1YoX-yUsclbs"},"source":["X_train=np.array(df.iloc[:,1:785])\n","X_train"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VzWjeKb9clY5"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","metadata":{"id":"LRT--VuAd6ff"},"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uUK_pMOHd6Zj"},"outputs":[],"source":["df=pd.read_csv(\"/content/drive/MyDrive/WOC/emnist-letters-train.csv\",header =None)\n","print(df.head())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hLyb6AY46jVU"},"outputs":[],"source":["sf=pd.read_csv(\"/content/drive/MyDrive/WOC/emnist-letters-train.csv\",header = None)\n","print(sf.head())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c-V2t6VD8H7S"},"outputs":[],"source":["X=np.array(df.iloc[:,1:785])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TrfxPZW78bYp"},"outputs":[],"source":["Y=np.array(df.iloc[:,0])\n","print(Y.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"euypHbKj8iXa"},"outputs":[],"source":["Y=Y.reshape(X.shape[0],1)\n","Y"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z4GOXqj18zWH"},"outputs":[],"source":["X_test=np.array(sf.iloc[:,1:785])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mvvDLMgy9A7z"},"outputs":[],"source":["Y_test=np.array(sf.iloc[:,0])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1tw1VE0R9G55"},"outputs":[],"source":["Y_test=Y_test.reshape(X_test.shape[0],1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_XsC8J4s9OyR"},"outputs":[],"source":["number_of_input_layer_neurons=X.shape[1]\n","number_of_hidden_layer_neurons1=8\n","number_of_hidden_layer_neurons2=8\n","a=np.unique(Y)\n","number_of_output_layer_neurons= 26"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WsSOxMjH9cpa"},"outputs":[],"source":["weights_input_layer=np.random.randn(number_of_input_layer_neurons+1,number_of_hidden_layer_neurons1)\n","weights_hidden_output1=np.random.randn(number_of_hidden_layer_neurons1+1,number_of_hidden_layer_neurons2)\n","weights_hidden_output2=np.random.randn(number_of_hidden_layer_neurons2+1,number_of_output_layer_neurons)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O7-Np5nlUmCJ"},"outputs":[],"source":["c=np.ones((X.shape[0],1))\n","l=c.reshape(X.shape[0],1)"]},{"cell_type":"markdown","source":[""],"metadata":{"id":"9gtgBiba2MDa"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"M8jdBbMrU3Eu"},"outputs":[],"source":["print(X.shape)\n","print(weights_input_layer.shape)\n","print(weights_hidden_output1.shape)\n","print(weights_hidden_output2.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"55x5DKO_U2ez"},"outputs":[],"source":["def hypothesis(X,theta):\n","  return np.dot(X,theta)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"madEsQVR_5RH"},"outputs":[],"source":["#def sigmoid(X,theta):\n"," # return 1/(1+np.exp(-np.dot(X,theta)))\n","def sigmoid(z):\n","    return 1/(1+np.exp(-z))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pa6Bu_F1NvGL"},"outputs":[],"source":["def sigmoid_gradient(z):\n","   return sigmoid(z)*sigmoid(1-z)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LjTaGNA0YUOs"},"outputs":[],"source":["def derivatives_sigmoid(x):\n","  return x*(1-x)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xobLmRQbdgVk"},"outputs":[],"source":["def scaleMatrix(X):\n","  return X/255"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mf32_xJzdlKD"},"outputs":[],"source":["def DescaleMatrix(X):\n","  return X*255"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DNUey_lu6Q61"},"outputs":[],"source":["def cost_function(Y,y1):\n","  m=Y.shape[0]\n","  return -(1/m)*(Y*np.log(y1)+(1-Y)*np.log(1-y1))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X5Y3Vn77Vva_"},"outputs":[],"source":["X_scale=scaleMatrix(X)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2AXZJDltYGem"},"outputs":[],"source":["a1=np.insert(X_scale,0,1,axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iSVxKiQ5cPOX"},"outputs":[],"source":["p=np.unique(Y)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3P3xqBHScP1O"},"outputs":[],"source":["Y1=np.zeros([df.shape[0],len(p)])\n","#Y1=pd.DataFrame(Y1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"20rjBNCLcPsC"},"outputs":[],"source":["for i in range(0,len(p)):\n","  for j in range(0,len(Y1)):\n","    if Y[j]==p[i]:\n","      Y1[j,i]=1\n","    else:Y1[j,i]=0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bEubUCy_VvYW"},"outputs":[],"source":["def training_model(a1,weights_input_layer,weights_hidden_output1,weights_hidden_output2,Y1,iterations,lr):\n","  wout =0\n","  for i in range(iterations):\n","    z2=np.dot(a1,weights_input_layer)\n","    a2=sigmoid(z2)\n","    a2=np.insert(a2,0,1,axis=1)\n","    z3=np.dot(a2,weights_hidden_output1)\n","    a3=sigmoid(z3)\n","    a3=np.insert(a3,0,1,axis=1)\n","    z4=np.dot(a3,weights_hidden_output2)\n","    a4=sigmoid(z4)\n","    E=a4-Y1\n","    slope_output_layer=derivatives_sigmoid(a4)\n","    delta4=E*slope_output_layer\n","    slope_hidden_layer2=derivatives_sigmoid(a3)\n","    error_hidden_layer2=np.dot(delta4,weights_hidden_output2.T)\n","    delta3=error_hidden_layer2*slope_hidden_layer2\n","    error_hidden_layer1=np.dot(delta3,weights_hidden_output1)\n","    slope_hidden_layer1=derivatives_sigmoid(a2)\n","    delta2=slope_hidden_layer1.T@error_hidden_layer1\n","    #delta2=error_hidden_layer1*(slope_hidden_layer1.T)\n","    losses=[]\n","    \n","    wout=wout- np.dot(a4.T,delta4) *lr\n","    cost_error=cost_function(Y,Y1)\n","    \n","    if iterations%100==0:\n","      losses.append(cost_error)\n","\n","    return cost_error,a4\n","\n","\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dY-0_VR-VvDI"},"outputs":[],"source":["#shape of E=shape of y1=mX26\n","J,h = training_model(a1,weights_input_layer,weights_hidden_output1,weights_hidden_output2,Y1,50000,0.009)"]},{"cell_type":"code","source":["print(h)"],"metadata":{"id":"-fhG9cU-2mnq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["h.shape"],"metadata":{"id":"Aa1aLB-hAh_y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Y.shape"],"metadata":{"id":"qsHtz__MApz-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(26):\n","  correct = 0\n","  h_accuracy = h[:,i]\n","  y_accuracy = Y1[:,i]\n","  h_accuracy = h_accuracy.reshape(88800,1)\n","  y_accuracy = y_accuracy.reshape(88800,1)\n","  correct += np.where(np.logical_and(h_accuracy>=0.5 , y_accuracy==1))[0].shape[0]\n","  correct += np.where(np.logical_and(h_accuracy<0.5 , y_accuracy==0))[0].shape[0]\n","  accuracy = correct/88800\n","  print(\"Accuracy\",accuracy*100)"],"metadata":{"id":"go15R285A8YE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"0t-4oEbiBJST"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"n-B-8215Baav"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Neural_network_1","provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}